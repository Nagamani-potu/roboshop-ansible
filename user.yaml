- name: user
  hosts: user
  become: yes
  tasks:
  - name: disable old nodejs and enable nodejs:18
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y

  - name: install nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: present
  
  - name: create roboshop user
    ansible.builtin.user:
      name: roboshop

  - name: create app directory
    ansible.builtin.file:
      name: /app
      state: directory

  - name: download user application
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/user.zip
      dest: /tmp

  - name: Extract user application
    ansible.builtin.unarchive:
      src: /tmp/user.zip
      dest: /app
      remote_src: yes

  - name: install dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app
  
    - name: Copy user service
    ansible.builtin.copy:
      src: user.service
      dest: /etc/systemd/system/user.service

  - name: Reload systemd
    ansible.builtin.systemd:
      daemon_reload: true

  - name: copy mongodb repo
    ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongodb.repo

  - name: install mongodb client
    ansible.builtin.package:
      name: mongodb-org-shell
      state: present

  - name: get the categories count
    ansible.builtin.command: mongo --host mongodb.devopstraining.space --quiet --eval 'db = db.getSiblingDB("user"); db.products.count()'
    register: product_count

  - name: load user data
    ansible.builtin.command: mongo --host mongodb.devopstraining.space < /app/schema/user.js
    when: product_count.stdout == "0"

  - name: start and enable user
    ansible.builtin.service:
      name: user
      state: started
      enabled: yes
